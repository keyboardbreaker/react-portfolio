{"version":3,"sources":["images/about.jpg","components/About.js","components/Navigation.js","components/Home.js","components/Projects.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","About","react_default","a","createElement","className","React","Component","Navigation","NavLink","to","Home","class","src","MyFace","alt","Navigation_Navigation","Projects","href","aria-hidden","Error","App","HashRouter","Switch","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4TCGlCC,gMAEE,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,oBAAd,gCAJIE,IAAMC,qCCEpBC,0LAEE,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,MAAZ,MAAoBR,EAAAC,EAAAC,cAAA,qBAApB,mBAA+DF,EAAAC,EAAAC,cAAA,WAC/DF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,aAAZ,MAA2BR,EAAAC,EAAAC,cAAA,wCAA8BF,EAAAC,EAAAC,cAAA,WAA9B,iBAAiDF,EAAAC,EAAAC,cAAA,oBAAjD,qBAAgGF,EAAAC,EAAAC,cAAA,WAC3HF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,UAAZ,MAAwBR,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,qBAAlB,wBANfE,IAAMC,YCAzBI,SAAO,WACX,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMQ,MAAM,QACZV,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,IAAQC,IAAK,SAAUV,UAAU,WAC3CH,EAAAC,EAAAC,cAAA,mCAA0BF,EAAAC,EAAAC,cAAA,wBAA1B,MACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACY,EAAD,WCVJC,0LAEE,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,oBAAd,KAAiCF,EAAAC,EAAAC,cAAA,KAC7Bc,KAAK,6CACLH,IAAI,IAFyB,qBAIrCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGQ,MAAM,gBAAgBO,cAAY,SAAzC,WAA4DjB,EAAAC,EAAAC,cAAA,KACxDc,KAAK,qDACLH,IAAI,IAFoD,uBAVzDT,IAAMC,YCAvBa,0LAEE,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,yCAJIE,IAAMC,oCCuBXc,mLAfX,OACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACErB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWf,EAAMgB,OAAK,IACtCzB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWT,IACnCf,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWzB,IAChCC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOE,UAAWN,cATZb,aCGEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6127be6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.9f87e7f7.jpg\";","import React from \"react\";\nimport \"./About.css\";\n\nclass About extends React.Component{\n    render() {\n        return (\n            <div className=\"About\">\n                <p>DM me with <span>jobs</span>: yujinost@gmail.com</p>\n            </div>\n        );\n    }\n}\n\nexport {About}\n","import React from \"react\";\nimport \"./About.css\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navigation.css\"\n\nclass Navigation extends React.Component{\n    render() {\n        return (\n            <div className=\"Navigation\">\n                <NavLink to=\"/#\">1. <span>Stare</span> into his eyes.</NavLink><br/>\n                <NavLink to=\"/Projects\">2. <i>\"You're a Developer right? <br/>What have you <span>work</span>ed on recently?\"</i></NavLink><br/>\n                <NavLink to=\"/About\">3. <i>\"Tell me a bit <span>about</span> yourself?\"</i></NavLink>\n            </div>\n        );\n    }\n}\n\nexport {Navigation}\n","import React from \"react\";\nimport MyFace from \"../images/about.jpg\";\nimport { Navigation } from \"./Navigation\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"App\">\n      <body class=\"home\">\n      <h1>You've Bumped into this guy</h1>\n      <img src={MyFace} alt={\"MyFace\"} className=\"myface\" />\n      <p>Something about him is <span>alluring</span>, </p>\n      <h1>What do you do next?</h1>\n      <h1><Navigation /></h1>\n      </body>\n    </div>\n  );\n};\n\nexport { Home };\n","import React from \"react\";\nimport \"./Projects.css\";\n\nclass Projects extends React.Component{\n    render() {\n        return (\n            <div className=\"Projects\">\n                <div className='borderBox'> \n                    <h1>KODIRI IS <span>LOVE</span>, <a \n                        href=\"https://github.com/keyboardbreaker/kodflix\" \n                        alt=\"\">KODFLIX IS LIFE</a></h1>\n                </div>\n                <div className='borderBox'> \n                    <h1><i class=\"fab fa-github\" aria-hidden=\"true\"></i>ONE DAY <a \n                        href=\"https://github.com/keyboardbreaker/react-portfolio\" \n                        alt=\"\">PORTFOLIO</a></h1>\n                </div> \n            </div>\n        );\n    }\n}\n\nexport {Projects}\n","import React from \"react\";\nimport './Error.css';\n\nclass Error extends React.Component{\n    render() {\n        return (\n            <div className=\"Error\">\n                <h1>Path Does not Exist</h1>\n            </div>\n        );\n    }\n}\n\nexport {Error}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { About } from \"./components/About\";\nimport { Home } from \"./components/Home\";\nimport { Projects } from \"./components/Projects\";\nimport { Error } from \"./components/Error\";\nimport { Navigation } from \"./components/Navigation\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/about\" component={About} />\n            <Route component={Error} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}